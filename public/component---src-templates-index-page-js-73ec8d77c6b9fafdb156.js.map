{"version":3,"sources":["webpack:///./src/templates/index-page.js"],"names":["StyledWrapper","styled","div","props","theme","darkShades","media","s","m","l","PostPreviewWrapper","PostLink","StyledLink","ReadLink","Date","Category","darkMain","PostExcerpt","H1","h1","PaginationWrapper","PaginationLink","Index","pageContext","group","index","first","last","filter","post","node","frontmatter","title","length","layout","map","key","id","String","date","toUpperCase","category","to","path","description","excerpt","data-nav"],"mappings":"sNAWMA,EAAgBC,IAAOC,IAAV,4EAAGD,CAAH,gFACR,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,aAK5BC,IAAMC,EANS,wFAUfD,IAAME,EAVS,+DAafF,IAAMG,EAbS,oEAkBbC,EAAqBT,IAAOC,IAAV,iFAAGD,CAAH,+CAGpBK,IAAME,EAHc,mDAQlBG,EAAWV,YAAOW,KAAV,uEAAGX,CAAH,gBACH,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,cAG1BQ,EAAWZ,YAAOW,KAAV,uEAAGX,CAAH,wEAURa,EAAOb,IAAOC,IAAV,mEAAGD,CAAH,sFAQJc,EAAWd,IAAOC,IAAV,uEAAGD,CAAH,8EAEH,SAAAE,GAAK,OAAIA,EAAMC,MAAMY,YAM1BC,EAAchB,IAAOC,IAAV,0EAAGD,CAAH,gBACN,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,cAG1Ba,EAAKjB,IAAOkB,GAAV,iEAAGlB,CAAH,0DAIJK,IAAME,EAJF,yDASFY,EAAoBnB,IAAOC,IAAV,gFAAGD,CAAH,kGAMnBK,IAAMC,EANa,wDASnBD,IAAME,EATa,4EAanBF,IAAMG,EAba,yDAkBjBY,EAAiBpB,YAAOW,KAAV,6EAAGX,CAAH,yCA0DLqB,UArDD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACPC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KAE7B,OAEE,kBAAC,IAAD,KACE,kBAAC3B,EAAD,KACGwB,EACEI,QACC,SAAAC,GAAI,OACFA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,GACJ,SAAjCJ,EAAKC,KAAKC,YAAYG,UAEzBC,KAAI,gBAASN,EAAT,EAAGC,KAAH,OACH,kBAACpB,EAAD,CAAoB0B,IAAKP,EAAKQ,IAC5B,kBAACvB,EAAD,KAAOwB,OAAOT,EAAKE,YAAYQ,MAAMC,eACrC,kBAACzB,EAAD,KACGuB,OAAOT,EAAKE,YAAYU,UAAUD,eAErC,kBAACtB,EAAD,KACE,kBAACP,EAAD,CAAU+B,GAAIb,EAAKE,YAAYY,MAC5Bd,EAAKE,YAAYC,QAGtB,kBAACf,EAAD,KACGY,EAAKE,YAAYa,aAAef,EAAKgB,SAExC,kBAAChC,EAAD,CAAUiC,YAAA,EAASJ,GAAIb,EAAKE,YAAYY,MACtC,kBAAC,IAAD,MADF,YAMN,kBAACvB,EAAD,MACIM,GACA,kBAACL,EAAD,CAAgByB,YAAA,EAASJ,GAAIjB,EAAQ,EAAR,OAAkBA,EAAQ,GAAM,KAA7D,gBAIAE,GACA,kBAACN,EAAD,CAAgByB,YAAA,EAASJ,GAAE,OAAQjB,EAAQ,IAA3C","file":"component---src-templates-index-page-js-73ec8d77c6b9fafdb156.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n// import { Link } from 'gatsby';\r\n// import Helmet from 'react-helmet';\r\nimport { FaLongArrowAltRight as ArrowIcon } from 'react-icons/fa';\r\n\r\nimport Layout from '../components/Layout';\r\nimport media from '../styles/media';\r\nimport StyledLink from '../components/Link';\r\n\r\nconst StyledWrapper = styled.div`\r\n  color: ${props => props.theme.darkShades};\r\n  display: grid;\r\n  grid-gap: 3px;\r\n  grid-template-columns: 1fr;\r\n\r\n  ${media.s`\r\n    grid-gap: 10px;\r\n    grid-template-columns: 1fr 1fr;\r\n  `};\r\n  ${media.m`\r\n    grid-template-columns: 1fr;\r\n  `};\r\n  ${media.l`\r\n    grid-template-columns: 1fr 1fr;\r\n  `};\r\n`;\r\n\r\nconst PostPreviewWrapper = styled.div`\r\n  grid-column: 1 span;\r\n  padding: 0 0 1rem 0;\r\n  ${media.m`\r\n    padding: 1rem;\r\n  `};\r\n`;\r\n\r\nconst PostLink = styled(StyledLink)`\r\n  color: ${props => props.theme.darkShades};\r\n`;\r\n\r\nconst ReadLink = styled(StyledLink)`\r\n  padding: 5px 0;\r\n  display: inline-block;\r\n\r\n  svg {\r\n    top: 3px;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nconst Date = styled.div`\r\n  margin: 0;\r\n  padding: 0 5px 0 0;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Category = styled.div`\r\n  margin: 0;\r\n  color: ${props => props.theme.darkMain};\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`;\r\n\r\nconst PostExcerpt = styled.div`\r\n  color: ${props => props.theme.darkShades};\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  margin: 0;\r\n  line-height: 2.5rem;\r\n  padding: 0 0 0.5rem 0;\r\n  ${media.m`\r\n    padding: 0 0 1rem 0;\r\n  `};\r\n`;\r\n\r\nconst PaginationWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  grid-column: 1 span;\r\n  padding: 0 0 1rem 0;\r\n\r\n  ${media.s`\r\n    grid-column: 2 span;\r\n  `};\r\n  ${media.m`\r\n    grid-column: 1 span;\r\n    padding: 1rem;\r\n  `};\r\n  ${media.l`\r\n    grid-column: 2 span;\r\n  `};\r\n`;\r\n\r\nconst PaginationLink = styled(StyledLink)`\r\n  padding: 5px 0;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Index = ({ pageContext }) => {\r\n  const { group, index, first, last } = pageContext;\r\n\r\n  return (\r\n    // const { edges: posts } = data.allMarkdownRemark;\r\n    <Layout>\r\n      <StyledWrapper>\r\n        {group\r\n          .filter(\r\n            post =>\r\n              post.node.frontmatter.title.length > 0 &&\r\n              post.node.frontmatter.layout === 'post',\r\n          )\r\n          .map(({ node: post }) => (\r\n            <PostPreviewWrapper key={post.id}>\r\n              <Date>{String(post.frontmatter.date).toUpperCase()}</Date>\r\n              <Category>\r\n                {String(post.frontmatter.category).toUpperCase()}\r\n              </Category>\r\n              <H1>\r\n                <PostLink to={post.frontmatter.path}>\r\n                  {post.frontmatter.title}\r\n                </PostLink>\r\n              </H1>\r\n              <PostExcerpt>\r\n                {post.frontmatter.description || post.excerpt}\r\n              </PostExcerpt>\r\n              <ReadLink data-nav to={post.frontmatter.path}>\r\n                <ArrowIcon />\r\n                Read\r\n              </ReadLink>\r\n            </PostPreviewWrapper>\r\n          ))}\r\n        <PaginationWrapper>\r\n          {!first && (\r\n            <PaginationLink data-nav to={index > 2 ? `/p/${index - 1}` : '/'}>\r\n              Newer posts\r\n            </PaginationLink>\r\n          )}\r\n          {!last && (\r\n            <PaginationLink data-nav to={`/p/${index + 1}`}>\r\n              Older posts\r\n            </PaginationLink>\r\n          )}\r\n        </PaginationWrapper>\r\n      </StyledWrapper>\r\n    </Layout>\r\n  );\r\n};\r\nIndex.propTypes = {\r\n  pageContext: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}