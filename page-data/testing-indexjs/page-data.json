{"componentChunkName":"component---src-templates-blog-post-js","path":"/testing-indexjs/","result":{"data":{"markdownRemark":{"html":"<h4>with Create React App and Jest</h4>\n<p><strong>Tl,dr: Unit testing in JavaScript can be an difficult art. To test my React index.js component I had to use a neat trick, which I want to share here. You should just read it :)</strong></p>\n<p>In a recent JavaScript side project of mine I used <a href=\"https://facebook.github.io/react/\">React</a>,\nmore specificlly <a href=\"https://github.com/facebookincubator/create-react-app\">Create React App (CRA)</a>.\nCRA sets you up with <a href=\"https://facebook.github.io/jest/\">Jest</a> as a testing platform, which I enjoyed using.\nThat’s mostly because a lot of things work out of the box and you can start quickly. Also their watch CLI is awesome.</p>\n<p>However, I struggled with writing unit tests for the index.js start file. That’s that file which imports your App component\nand renders it to the DOM, something like that:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Well, not a lot is happening here, so I wanted to just have a smoke test for that. A smoke test basically checks\nif the component crashes or not. My plan was to import that index file,\njsonify it and do a snapshot test with it. For those who don’t know,\nsnapshot testing checks if a string is the same as before after your changes.\nIt’s super simple in Jest. Read more <a href=\"https://facebook.github.io/jest/docs/snapshot-testing.html#content\">here</a>.</p>\n<p>Now the problems started. As you might see, index.js doesn’t\nreally export something testable, like a function. Instead, it renders\nto the DOM. In a first try, I imported the index component to my test file,\nJSON stringifed and snapshot tested it. Like so, better don’t try that at home:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// index.test.js</span>\n<span class=\"token keyword\">import</span> Index <span class=\"token keyword\">from</span> <span class=\"token string\">'./index.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders without crashing'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>Index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>BUT… <code class=\"language-text\">TypeError: Converting circular structure to JSON</code>.\nThat was frustrating, especially since I knew the index code worked quite well.\nOk, long story short, I messed with that, googled it, debugged it, lost almost my mind and\nfound out, that there is a _reactInternalInstance property in that component, which we cannot stringify.\nHmm, I ended up with that (you could almost try this at home):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// index.test.js</span>\n<span class=\"token keyword\">import</span> Index <span class=\"token keyword\">from</span> <span class=\"token string\">'./index.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'renders without crashing'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> Index<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> _reactInternalInstance<span class=\"token operator\">:</span> <span class=\"token string\">'censored'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>That circular thing is gone, which is great, progress, victory? Sadly not quite.\n<code class=\"language-text\">Invariant Violation: _registerComponent(...): Target container is not a DOM element.</code>\nYeah, fair enough, I wanted to render to an elemnet with id root,\nwhich I didn’t have in my test environment, got it. After giving it\na little thougt I ended up with changing the index component.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Give me a break, that does not really hurt in production and the test\npasses fine. Green, I have a snapshot and will be notified when the index component\ncrashes due to me doing stupid things in the future.</p>\n<p>If you do that yourself, you could be alright or you could meet additional problems based on your environment.\nI hope you don’t but if you’re unlucky I would recommend you trying out shallow rendering with\n<a href=\"https://github.com/airbnb/enzyme\">enzyme</a> from airbnb and <a href=\"https://www.npmjs.com/package/enzyme-to-json\">enzyme-to-json</a> for snapshot testing.</p>\n<p>If this helped you out, you have a better method of testing a React\nindex.js component, or you think that’s really terrible,\nfeel free to let me know on my <a href=\"https://twitter.com/kriswep\">twitter @kriswep</a>.</p>","fields":{"slug":"/articles/2017-02-Testing-indexjs/"},"frontmatter":{"date":"February 19, 2017","path":"/testing-indexjs/","title":"Unit testing a React index.js file","description":"Writing unit tests for your React index.js file can be a little tricky. Read on how I did it lately...","author":"@kriswep","layout":"post","readNext":"/articles/2020-03-Build-An-App-01/","issueNumber":9}},"readNext":{"frontmatter":{"date":"April 03, 2020","path":"/articles/build-an-app-01/","title":"Let's build an app","description":"Bored at home? Join me learning how to build a small, but complete app in 2020. We'll use React Native to build a cross platform and fully native app."}},"site":{"siteMetadata":{"title":"wetainment","siteUrl":"https://wetainment.com"}}},"pageContext":{"slug":"/articles/2017-02-Testing-indexjs/","readNext":"/articles/2020-03-Build-An-App-01/"}},"staticQueryHashes":[]}